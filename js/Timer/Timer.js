import{sessionStartName,workMode,shortBreakMode,longBreakMode,buttonText}from"./TimerVariables.js";import{timeToString}from"../Misc/UtilityFunctions.js";class Timer extends HTMLElement{constructor(t,e,s){super(),this.state="",this.stateQueue=[],this.startButton=t,this.timeDisplay=e,this.displayStatus=s,this.focusTime=document.getElementById("focusTime"),this.shortBreakTime=document.getElementById("shortBreakTime"),this.longBreakTime=document.getElementById("longBreakTime"),this.end=!1,this.autoStart=document.getElementById("autoStartSwitch"),this.sessionId=localStorage.getItem("pomoSessionId"),this.sessionId=null===this.sessionId?0:parseInt(this.sessionId,10)+1;const o=[workMode,shortBreakMode,workMode,shortBreakMode,workMode,shortBreakMode,workMode,longBreakMode];this.stateQueue=o,null!==localStorage.getItem("workModeTime")&&(workMode.duration=localStorage.getItem("workModeTime")),null!==localStorage.getItem("shortBreakTime")&&(shortBreakMode.duration=localStorage.getItem("shortBreakTime")),null!==localStorage.getItem("longBreakTime")&&(longBreakMode.duration=localStorage.getItem("longBreakTime")),null!==this.focusTime&&(this.focusTime.value=workMode.duration,this.shortBreakTime.value=shortBreakMode.duration,this.longBreakTime.value=longBreakMode.duration),null!==this.timeDisplay&&(this.timeDisplay.textContent=timeToString(60*workMode.duration)),this.addEventListeners()}resetPomoSessionId(){this.sessionId=0,localStorage.setItem("pomoSessionId",this.sessionId)}onTimerComplete(){const t=this.stateQueue.shift();this.stateQueue.push(t);const e=new CustomEvent("timer-complete",{detail:{sessionName:t.name,duration:t.duration,sessionIsWork:t.isWork,sessionId:this.sessionId}});this.dispatchEvent(e),t.isWork||(this.sessionId+=1,localStorage.setItem("pomoSessionId",this.sessionId)),!1===this.autoStart.checked?(this.state=this.stateQueue[0].name,this.updateDisplay()):this.startTimer()}startTimer(){this.end=!1;const t=this.stateQueue[0];this.state=t.name,this.displayStatus.textContent=this.state;const e=new CustomEvent("timer-start",{detail:{sessionName:this.state,sessionIsWork:t.isWork}});this.dispatchEvent(e),this.countdown(60*t.duration)}endTimer(){this.end=!0,this.displayStatus.textContent=sessionStartName,this.timeDisplay.textContent=timeToString(60*workMode.duration),document.title="Pomodoro",this.stateQueue=[];const t=[workMode,shortBreakMode,workMode,shortBreakMode,workMode,shortBreakMode,workMode,longBreakMode];for(let e=0;e<t.length;e+=1)this.stateQueue.push(t[e]);const e=new CustomEvent("timer-end");this.dispatchEvent(e)}countdown(t){if(this.end)return;const e=timeToString(t);this.timeDisplay.textContent=e,document.title=`${this.state} ${e}`,(t-=1)>=0?setTimeout((()=>{this.countdown(t)}),1e3):this.onTimerComplete()}changeTime(t){0===t.target.value&&(t.target.value=1),t.target.value>99&&(t.target.value=99),"focusTime"===t.target.id?(this.timeDisplay.textContent=`${t.target.value}:00`,workMode.duration=t.target.value,localStorage.setItem("workModeTime",t.target.value)):"shortBreakTime"===t.target.id?(shortBreakMode.duration=t.target.value,localStorage.setItem("shortBreakTime",t.target.value)):"longBreakTime"===t.target.id&&(longBreakMode.duration=t.target.value,localStorage.setItem("longBreakTime",t.target.value))}addEventListeners(){this.startButton.addEventListener("click",(()=>{this.startButton.textContent.indexOf(buttonText.startTimerText)>-1?(this.startTimer(),this.startButton.childNodes[0].nodeValue=buttonText.stopTimerText):(this.endTimer(),this.startButton.childNodes[0].nodeValue=buttonText.startTimerText,document.getElementsByTagName("body")[0].classList.remove("short-break"))})),this.focusTime.addEventListener("change",(t=>{this.changeTime(t)})),this.shortBreakTime.addEventListener("change",(t=>{this.changeTime(t)})),this.longBreakTime.addEventListener("change",(t=>{this.changeTime(t)}))}updateDisplay(){this.startButton.childNodes[0].nodeValue=buttonText.startTimerText;const t=this.stateQueue[0];this.displayStatus.textContent=this.state,this.timeDisplay.textContent=timeToString(60*t.duration),document.title=t.name;const e=new CustomEvent("timer-end");this.dispatchEvent(e)}}customElements.define("custom-timer",Timer);export{Timer};
